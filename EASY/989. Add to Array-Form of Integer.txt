989. Add to Array-Form of Integer
Easy

1566

161

Add to List

Share
The array-form of an integer num is an array representing its digits in left to right order.

For example, for num = 1321, the array form is [1,3,2,1].
Given num, the array-form of an integer, and an integer k, return the array-form of the integer num + k.

 

Example 1:

Input: num = [1,2,0,0], k = 34
Output: [1,2,3,4]
Explanation: 1200 + 34 = 1234
Example 2:

Input: num = [2,7,4], k = 181
Output: [4,5,5]
Explanation: 274 + 181 = 455
Example 3:

Input: num = [2,1,5], k = 806
Output: [1,0,2,1]
Explanation: 215 + 806 = 1021
 

Constraints:

1 <= num.length <= 104
0 <= num[i] <= 9
num does not contain any leading zeros except for the zero itself.
1 <= k <= 104
Accepted
130,907
Submissions
287,715



class Solution {
public:
    vector<int> addToArrayForm(vector<int>& num, int k) {
        
        vector<int> kvec;
        
        while(k>0)  {
            int rem = k%10;
            kvec.push_back(rem);
            k /= 10;
        }
        reverse(num.begin(), num.end());
        
        int n = num.size();
        int kn = kvec.size();
        int N = max(kn,n);
        
        if(n>kn)    {
            for(int i=0; i<n-kn; i++)
                kvec.push_back(0);
        }
        else if(n<kn)    {
            for(int i=0; i<kn-n; i++)
                num.push_back(0);
        }
        
        int carry = 0;
        vector<int> res;
        
        for(int i=0; i<N; i++)  {
            int curr = kvec[i] + num[i] + carry;
            if(curr<=9)  {
                res.push_back(curr);
                carry = 0;
            }
            else {
                int val = curr%10;
                carry = curr/10;
                res.push_back(val);
            }
        }
        if(carry>0)
            res.push_back(carry);
        
        reverse(res.begin(), res.end());
        return res;
    }
};