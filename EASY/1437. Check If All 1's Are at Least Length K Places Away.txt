1437. Check If All 1's Are at Least Length K Places Away
Easy

461

199

Add to List

Share
Given an binary array nums and an integer k, return true if all 1's are at least k places away from each other, otherwise return false.

 

Example 1:


Input: nums = [1,0,0,0,1,0,0,1], k = 2
Output: true
Explanation: Each of the 1s are at least 2 places away from each other.
Example 2:


Input: nums = [1,0,0,1,0,1], k = 2
Output: false
Explanation: The second 1 and third 1 are only one apart from each other.
 

Constraints:

1 <= nums.length <= 105
0 <= k <= nums.length
nums[i] is 0 or 1
Accepted
61,836
Submissions
104,409



class Solution {
public:
    bool kLengthApart(vector<int>& nums, int k) {
        
        int n = nums.size();
        
        int i=0;
        int idx=0;
        while(i!=n){
            if(nums[i]==1){
                idx = i;
                break;
            }
            i++;
        }
        
        int curr=0;
        for(int i=idx+1; i<n; i++)  {
            if(nums[i]==1)  {
                if(curr<k)
                    return false;
                else
                    curr=0;
            }
            else
                curr++;
        }
        
        return true;
    }
};