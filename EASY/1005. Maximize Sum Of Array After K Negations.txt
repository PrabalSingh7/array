1005. Maximize Sum Of Array After K Negations
Easy

1142

87

Add to List

Share
Given an integer array nums and an integer k, modify the array in the following way:

choose an index i and replace nums[i] with -nums[i].
You should apply this process exactly k times. You may choose the same index i multiple times.

Return the largest possible sum of the array after modifying it in this way.

 

Example 1:

Input: nums = [4,2,3], k = 1
Output: 5
Explanation: Choose index 1 and nums becomes [4,-2,3].
Example 2:

Input: nums = [3,-1,0,2], k = 3
Output: 6
Explanation: Choose indices (1, 2, 2) and nums becomes [3,1,0,2].
Example 3:

Input: nums = [2,-3,-1,5,-4], k = 2
Output: 13
Explanation: Choose indices (1, 4) and nums becomes [2,3,-1,5,4].
 

Constraints:

1 <= nums.length <= 104
-100 <= nums[i] <= 100
1 <= k <= 104
Accepted
62,865
Submissions
122,957



class Solution {
public:
    int largestSumAfterKNegations(vector<int>& nums, int k) {
        
        int n = nums.size();
        int min = INT_MAX;
        int neg = 0;
        int pos = 0;
        int zero = 0;
        int sum = 0;
        
        sort(nums.begin(), nums.end());
        
        for(int i=0; i<n; i++)  {
            if(nums[i]>0)   {
                pos++;
            }
            else if(nums[i]==0) {
                zero++;
            }
            else if(nums[i]<0)  {
                neg++;
            }
            if(abs(nums[i])<min && nums[i]!=0)
                min=abs(nums[i]); 
        }
        
        
        if(k>=neg)   {
            if(zero>=1) {       // extra k's neutralized by 0
                for(int i=0; i<neg; i++)    {
                    sum += ((-1)*nums[i]);
                }
                for(int i=neg; i<n; i++)    {
                    sum += nums[i];
                }
                return sum;
            }
            else {          // extra k's used on minimum absolute value
                for(int i=0; i<neg; i++)    
                    sum += ((-1)*nums[i]);
                for(int i=neg; i<n; i++)    
                    sum += nums[i];
                if( (k-neg)%2== 1 ) 
                    sum -= 2*min; 
                return sum;                
            }
        }
        
        else {
                for(int i=0; i<k; i++)    
                    sum += ((-1)*nums[i]);
                for(int i=k; i<n; i++)    
                    sum += nums[i];
                return sum;
        }
        
        return sum;
        
    }
};