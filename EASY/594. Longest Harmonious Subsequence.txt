594. Longest Harmonious Subsequence
Easy

1722

165

Add to List

Share
We define a harmonious array as an array where the difference between its maximum value and its minimum value is exactly 1.

Given an integer array nums, return the length of its longest harmonious subsequence among all its possible subsequences.

A subsequence of array is a sequence that can be derived from the array by deleting some or no elements without changing the order of the remaining elements.

 

Example 1:

Input: nums = [1,3,2,2,5,2,3,7]
Output: 5
Explanation: The longest harmonious subsequence is [3,2,2,2,3].
Example 2:

Input: nums = [1,2,3,4]
Output: 2
Example 3:

Input: nums = [1,1,1,1]
Output: 0
 

Constraints:

1 <= nums.length <= 2 * 104
-109 <= nums[i] <= 109
Accepted
124,618
Submissions
234,638



class Solution {
public:
    int findLHS(vector<int>& nums) {
        
        int n = nums.size();
        unordered_map<int,int> mp;
        
        for(int i=0; i<n; i++)  
            mp[nums[i]]++;
        
        vector<int> help;
        for(auto it:mp)  
            help.push_back(it.first);
        sort(help.begin(), help.end());
        
        if(help.size()==1)
            return 0;
        
        int mx = 0;
        for(int i=0; i<help.size()-1; i++)  {
            if(help[i+1]-help[i]==1)    {
                int size = mp[help[i]] + mp[help[i+1]];
                mx = max(size,mx);                
            }
        }
        
        return mx;
    }
};