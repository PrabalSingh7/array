812. Largest Triangle Area
Easy

381

1400

Add to List

Share
Given an array of points on the X-Y plane points where points[i] = [xi, yi], return the area of the largest triangle that can be formed by any three different points. Answers within 10-5 of the actual answer will be accepted.

 

Example 1:


Input: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]
Output: 2.00000
Explanation: The five points are shown in the above figure. The red triangle is the largest.
Example 2:

Input: points = [[1,0],[0,0],[0,1]]
Output: 0.50000
 

Constraints:

3 <= points.length <= 50
-50 <= xi, yi <= 50
All the given points are unique.
Accepted
35,935
Submissions
60,158



class Solution {
public:
        double largestTriangleArea(vector<vector<int>>& points) {
        int n=points.size();
        double maxArea=0;
             double d1,d2,d3,area,s;
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                for(int k=j+1;k<n;k++)
                {
        d1=sqrt((double)pow(points[i][0]-points[j][0],2)+pow(points[i][1]-points[j][1],2));    
        d2=sqrt((double)pow(points[j][0]-points[k][0],2)+pow(points[j][1]-points[k][1],2));
        d3=sqrt((double)pow(points[i][0]-points[k][0],2)+pow(points[i][1]-points[k][1],2));
        s=(d1+d2+d3)/2.00000;
        area=(double)sqrt(s*(s-d1)*(s-d2)*(s-d3));
                    
                    if(maxArea<area)
                     maxArea=area;   
                }
            }
        }
        return maxArea;
    }
};