
    QUESTION :-

1732. Find the Highest Altitude
Easy

There is a biker going on a road trip. The road trip consists of n + 1 points at different altitudes. The biker starts his trip on point 0 with altitude equal 0.
You are given an integer array gain of length n where gain[i] is the net gain in altitude between points i​​​​​​ and i + 1 for all (0 <= i < n). Return the highest altitude of a point.

 Example 1:
Input: gain = [-5,1,5,0,-7]
Output: 1
Explanation: The altitudes are [0,-5,-4,1,1,-6]. The highest is 1.
 
 Example 2:
Input: gain = [-4,-3,-2,-1,4,3,2]
Output: 0
Explanation: The altitudes are [0,-4,-7,-9,-10,-6,-3,-1]. The highest is 0.
 
 Constraints:
n == gain.length
1 <= n <= 100
-100 <= gain[i] <= 100

Accepted:87,072
Submissions:110,698


    ANSWER :-

class Solution {
public:
    // APPROACH :- we creaTe an additional array to track the actual altitude at each iteration.
        // T.C. = O(n)     S.C. = O(n)
    
//     int largestAltitude(vector<int>& gain) {
        
//         int max = INT_MIN;
//         int n = gain.size();
        
//         vector<int> altitude;
//         altitude.push_back(0);
        
//         for(int i=0; i<n; i++)  {
//             int currAlt = gain[i] + altitude[i];
//             altitude.push_back(currAlt);
//             if(currAlt > max)
//                 max = currAlt;
//         }
        
//         if(max<=0)
//             return 0;
//         return max;
//     }
    
    
    
    // FURTHER OPTIMIZED ITS SPACE CONSTRAINT , BY USING TWO SEPERATE VARIABLES - preAlt & currAlt. SO, NOW T.C - O(n) & S.C. REDUCES TO O(1)
    
    int largestAltitude(vector<int>& gain) {
        
        int max = INT_MIN;
        int n = gain.size();
        
        vector<int> altitude;
        int prevAlt = 0;
        // altitude.push_back(0);
        
        for(int i=0; i<n; i++)  {
            int currAlt = gain[i] + prevAlt;
            // altitude.push_back(currAlt);
            if(currAlt > max)
                max = currAlt;
            prevAlt = currAlt;
        }
        
        if(max<=0)
            return 0;
        return max;
    }
};