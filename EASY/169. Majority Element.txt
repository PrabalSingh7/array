
    QUESTION :-

169. Majority Element
Easy

Given an array nums of size n, return the majority element.
The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 Example 1:
Input: nums = [3,2,3]
Output: 3
 
 Example 2:
Input: nums = [2,2,1,1,1,2,2]
Output: 2
 
 Constraints:
n == nums.length
1 <= n <= 5 * 104
-109 <= nums[i] <= 109
 
 Follow-up: Could you solve the problem in linear time and in O(1) space?

Accepted:1,408,479
Submissions:2,212,965



    ANSWER :-

class Solution {
public:
    
    // MOORE VOTING ALGORITHUM : at the end of iteration , the value of ELE is the majority element
    
    
    int majorityElement(vector<int>& nums) {
        
        int ele=0,cnt=0;
        
        for(int i=0;i<nums.size();i++)  {
        
            if(cnt == 0)
                ele = nums[i];
            
            if(ele == nums[i])
                cnt++;
            
            else
                cnt--;
        
        }
        
        return ele;
    }
};
