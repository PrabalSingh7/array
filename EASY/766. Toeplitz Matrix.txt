766. Toeplitz Matrix
Easy

2130

127

Add to List

Share
Given an m x n matrix, return true if the matrix is Toeplitz. Otherwise, return false.

A matrix is Toeplitz if every diagonal from top-left to bottom-right has the same elements.

 

Example 1:


Input: matrix = [[1,2,3,4],[5,1,2,3],[9,5,1,2]]
Output: true
Explanation:
In the above grid, the diagonals are:
"[9]", "[5, 5]", "[1, 1, 1]", "[2, 2, 2]", "[3, 3]", "[4]".
In each diagonal all elements are the same, so the answer is True.
Example 2:


Input: matrix = [[1,2],[2,2]]
Output: false
Explanation:
The diagonal "[1, 2]" has different elements.
 

Constraints:

m == matrix.length
n == matrix[i].length
1 <= m, n <= 20
0 <= matrix[i][j] <= 99
 

Follow up:

What if the matrix is stored on disk, and the memory is limited such that you can only load at most one row of the matrix into the memory at once?
What if the matrix is so large that you can only load up a partial row into the memory at once?
Accepted
204,108
Submissions
299,695




class Solution {
public:
    
    // APPROACH : diagonal traversal in the upper half and lower half of matrix , and returning false if any value does'nt matches or else true.   
        // t.c - O(n+m)   s.c - O(1)
    
    bool isToeplitzMatrix(vector<vector<int>>& matrix) {
        
        int r = matrix.size()-1;
        int c = matrix[0].size()-1;
        
        cout<<"checking upper right triangle \n";
        //checking upper right triangle 
        for(int i=0; i<c; i++)  {
            int x=i;
            int y=0; 
            while(y<r && x<c) {
                cout<<y<<" "<<x<<"\n";                  
                if(matrix[y][x]!=matrix[y+1][x+1])  {
                    cout<<"case fail - "<<y<<" "<<x<<"\n";
                    return false;
                }
                x++;
                y++;
            }
        }
        
        //checking lower left triangle 
        cout<<"checking lower left triangle \n";
        for(int i=0; i<r; i++)  {
            int x=i;
            int y=0; 
            while(x<r && y<c) {
                cout<<x<<" "<<y<<"\n";                  
                if(matrix[x][y]!=matrix[x+1][y+1])  {
                    cout<<"case fail - "<<x<<" "<<y<<"\n";                    
                    return false;
                }
                x++;
                y++;
            }
        }
        
        return true;
    }
};