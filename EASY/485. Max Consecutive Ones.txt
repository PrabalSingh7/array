    QUESTION :-

485. Max Consecutive Ones
Easy

Given a binary array nums, return the maximum number of consecutive 1's in the array.

 Example 1:
Input: nums = [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s. The maximum number of consecutive 1s is 3.
 
 Example 2:
Input: nums = [1,0,1,1,0,1]
Output: 2
 
 Constraints:
1 <= nums.length <= 105
nums[i] is either 0 or 1.

Accepted:737,731
Submissions:1,322,967



    ANSWER :-

class Solution {
public:
    
    // APPROACH :- traversing the array, and each time the element is one we increment the current variable by 1, and if the element is 0 then we compare the ans with current and update ans with bigger value amongst after that we put current as 0.
    
    int findMaxConsecutiveOnes(vector<int>& nums) {
        
        int n = nums.size();
        int ans = INT_MIN;
        int current = 0;
        
        for(int j = 0; j < n; j++){
            
            if(nums[j] == 1)
                current++;
            else{
                ans = max(ans, current);
                current = 0;
            }
        
        }
        
        ans = max(ans, current);
        return ans;
    
    }
};