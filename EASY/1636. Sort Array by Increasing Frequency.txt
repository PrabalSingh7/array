1636. Sort Array by Increasing Frequency
Easy

1791

68

Add to List

Share
Given an array of integers nums, sort the array in increasing order based on the frequency of the values. If multiple values have the same frequency, sort them in decreasing order.

Return the sorted array.

 

Example 1:

Input: nums = [1,1,2,2,2,3]
Output: [3,1,1,2,2,2]
Explanation: '3' has a frequency of 1, '1' has a frequency of 2, and '2' has a frequency of 3.
Example 2:

Input: nums = [2,3,1,3,2]
Output: [1,3,3,2,2]
Explanation: '2' and '3' both have a frequency of 2, so they are sorted in decreasing order.
Example 3:

Input: nums = [-1,1,-6,4,5,-6,1,4,1]
Output: [5,-1,4,4,-6,-6,1,1,1]
 

Constraints:

1 <= nums.length <= 100
-100 <= nums[i] <= 100
Accepted
75,765
Submissions
110,648



class Solution {
public:
    vector<int> frequencySort(vector<int>& nums) {
        
        int n = nums.size();
        map<int,int> mp1;
        map<int,vector<int>> mp2;
        
        for(int i=0; i<n; i++)  
            mp1[nums[i]]++;    
        
        for(auto it : mp1)  {
            cout<<it.first<<" : "<<it.second;
            cout<<"\n";
        }
        
        for(auto it : mp1)   
            mp2[it.second].push_back(it.first);

        for(auto it : mp2)  {
            cout<<it.first<<" : ";
            for(auto i:it.second)
                cout<<i<<" ";
            cout<<"\n";
        }
  
        vector<int> res;

//         cout<<"\n";
//         cout<<"\n";
        
        for(auto it : mp2)  {
            int freq = it.first;
            vector<int> vals = it.second;
            int digs = vals.size();
                        
            if(digs==1){
                for(int i=0; i<freq; i++)
                    res.push_back(vals[0]);
            }
            else {
                sort(vals.begin(), vals.end(), greater<int>());
                for(int idx=0; idx<digs; idx++) {
                    for(int i=0; i<freq; i++)
                        res.push_back(vals[idx]);
                }
            }
        }
        
                
        return res;
        
    }
};