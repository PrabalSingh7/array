643. Maximum Average Subarray I
Easy

1943

173

Add to List

Share
You are given an integer array nums consisting of n elements, and an integer k.

Find a contiguous subarray whose length is equal to k that has the maximum average value and return this value. Any answer with a calculation error less than 10-5 will be accepted.

 

Example 1:

Input: nums = [1,12,-5,-6,50,3], k = 4
Output: 12.75000
Explanation: Maximum average is (12 - 5 - 6 + 50) / 4 = 51 / 4 = 12.75
Example 2:

Input: nums = [5], k = 1
Output: 5.00000
 

Constraints:

n == nums.length
1 <= k <= n <= 105
-104 <= nums[i] <= 104
Accepted
168,822
Submissions
384,791



class Solution {
public:
    double findMaxAverage(vector<int>& nums, int k) {
        
        double n = nums.size();
        double s = 0;
        
        if(k==n)    {
            for(int i=0; i<k ;i++)  
                s+=nums[i];
            return s/k;
        }
        
        for(int i=0; i<k ;i++)  
            s+=nums[i];
        double mx = s/k;
        // cout<<s<<" "<<mx<<"\n";
        
        for(int i=0; i<n-k; i++)   {
            s -= nums[i];
            s += nums[i+k];
            double curr = s/k;
            // cout<<s<<" "<<curr<<"\n";
            mx = max(curr,mx);
        }
        
        return mx;
    }
};