442. Find All Duplicates in an Array
Medium
9K
320
Companies
Given an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears once or twice, return an array of all the integers that appears twice.

You must write an algorithm that runs in O(n) time and uses only constant extra space.

 

Example 1:

Input: nums = [4,3,2,7,8,2,3,1]
Output: [2,3]
Example 2:

Input: nums = [1,1,2]
Output: [1]
Example 3:

Input: nums = [1]
Output: []
 

Constraints:

n == nums.length
1 <= n <= 105
1 <= nums[i] <= n
Each element in nums appears once or twice.
Accepted
545.6K
Submissions
741.6K
Acceptance Rate
73.6%




class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        int n = nums.size();
        vector<int> res;

        for(int i=0; i<n; i++)  { 
            if(nums[i] < 0) {
                int j = abs(nums[i]) - 1; 
                if(nums[j] < 0) 
                    res.push_back(nums[i] * -1);
                else 
                    nums[j] *= (-1);
            }
            else {
                int j = nums[i] - 1; 
                if(nums[j] < 0) 
                    res.push_back(nums[i]);
                else 
                    nums[j] *= (-1);
            }            
        }
        
        return res;
    }
};