923. 3Sum With Multiplicity
Medium
2.5K
292
Companies
Given an integer array arr, and an integer target, return the number of tuples i, j, k such that i < j < k and arr[i] + arr[j] + arr[k] == target.

As the answer can be very large, return it modulo 109 + 7.

 

Example 1:

Input: arr = [1,1,2,2,3,3,4,4,5,5], target = 8
Output: 20
Explanation: 
Enumerating by the values (arr[i], arr[j], arr[k]):
(1, 2, 5) occurs 8 times;
(1, 3, 4) occurs 8 times;
(2, 2, 4) occurs 2 times;
(2, 3, 3) occurs 2 times.
Example 2:

Input: arr = [1,1,2,2,2,2], target = 5
Output: 12
Explanation: 
arr[i] = 1, arr[j] = arr[k] = 2 occurs 12 times:
We choose one 1 from [1,1] in 2 ways,
and two 2s from [2,2,2,2] in 6 ways.
Example 3:

Input: arr = [2,1,3], target = 6
Output: 1
Explanation: (1, 2, 3) occured one time in the array so we return 1.
 

Constraints:

3 <= arr.length <= 3000
0 <= arr[i] <= 100
0 <= target <= 300
Accepted
95.7K
Submissions
211.4K
Acceptance Rate
45.3%


class Solution {
public:
    int threeSumMulti(vector<int>& arr, int target) {
        int n = arr.size();
        int mod = 1e9 + 7;
        int count = 0;

        for(int i=0; i<n; i++)    {
            int val_i = arr[i];
            int find_i = target - val_i;
            
            if(find_i <0 )
                continue;

            unordered_map<int,int> mp;
            for(int j=i+1; j<n; j++)  {
                int curr = arr[j];
                int tf = find_i - curr;
                if(tf <0 )
                    continue;
                int add_count = mp[tf];
                add_count %= mod;
                count += add_count;
                count %= mod;
                mp[curr]++;
            }

        }

        return count;
    }
};