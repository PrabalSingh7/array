1685. Sum of Absolute Differences in a Sorted Array
Medium
1K
29
Companies
You are given an integer array nums sorted in non-decreasing order.

Build and return an integer array result with the same length as nums such that result[i] is equal to the summation of absolute differences between nums[i] and all the other elements in the array.

In other words, result[i] is equal to sum(|nums[i]-nums[j]|) where 0 <= j < nums.length and j != i (0-indexed).

 

Example 1:

Input: nums = [2,3,5]
Output: [4,3,5]
Explanation: Assuming the arrays are 0-indexed, then
result[0] = |2-2| + |2-3| + |2-5| = 0 + 1 + 3 = 4,
result[1] = |3-2| + |3-3| + |3-5| = 1 + 0 + 2 = 3,
result[2] = |5-2| + |5-3| + |5-5| = 3 + 2 + 0 = 5.
Example 2:

Input: nums = [1,4,6,8,10]
Output: [24,15,13,15,21]
 

Constraints:

2 <= nums.length <= 105
1 <= nums[i] <= nums[i + 1] <= 104
Accepted
27.4K
Submissions
43.3K
Acceptance Rate
63.3%



class Solution {
public:
    vector<int> getSumAbsoluteDifferences(vector<int>& nums) {
        vector<int> prefix;
        int s = 0;

        for(auto i : nums)  {
            s+= i;
            prefix.push_back(s);
        }

        int n = nums.size();
        vector<int> res;
        int net_sum = prefix[n-1];

        for(int i=0; i<n; i++)  {
            int val = nums[i];

            //smaller eval
            int prevSum = i-1>=0 ? prefix[i-1] : 0;
            int prev_cnt = i;
            //larger eval
            int postSum = net_sum - prefix[i] ;
            int post_cnt = (n-1)-i;

            int curr_eval = ( (prev_cnt*val) - prevSum ) + ( postSum - (post_cnt*val) );
            res.push_back(curr_eval);
        }

        return res;
    }
};