1314. Matrix Block Sum
Medium
2.2K
337
Companies
Given a m x n matrix mat and an integer k, return a matrix answer where each answer[i][j] is the sum of all elements mat[r][c] for:

i - k <= r <= i + k,
j - k <= c <= j + k, and
(r, c) is a valid position in the matrix.
 

Example 1:

Input: mat = [[1,2,3],[4,5,6],[7,8,9]], k = 1
Output: [[12,21,16],[27,45,33],[24,39,28]]
Example 2:

Input: mat = [[1,2,3],[4,5,6],[7,8,9]], k = 2
Output: [[45,45,45],[45,45,45],[45,45,45]]
 

Constraints:

m == mat.length
n == mat[i].length
1 <= m, n, k <= 100
1 <= mat[i][j] <= 100
Accepted
77.4K
Submissions
102.6K
Acceptance Rate
75.4%

class Solution {
public:
    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) { 
        int n = mat.size(); 
        int m = mat[0].size();
        
        vector<vector<int>> res;
        vector<vector<int>> pre;

        for(int i=0; i<n; i++)  {
            int s = 0;
            vector<int> temp;
            for(int j=0; j<m; j++)  {
                s += mat[i][j];
                temp.push_back(s); 
            } 
            pre.push_back(temp);
        }

        for(int r=0; r<n; r++)  { 
            vector<int> temp_r;
            for(int c=0; c<m; c++)  {
                int sum = 0;
                int rmin = r-k;
                int rmax = r+k;
                int cmin = c-k;
                int cmax = c+k;
 
                for(int it = max(0,rmin); it<=min(n-1,rmax); it++)  
                sum += cmin>0 ? pre[it][min(m-1,cmax)] - pre[it][cmin-1] : pre[it][min(m-1,cmax)];
                  
                temp_r.push_back(sum);
            }
            res.push_back(temp_r);
        }

        return res;
    }
};